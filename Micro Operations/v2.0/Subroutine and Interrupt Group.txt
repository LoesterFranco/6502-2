Brief: 
    - Addressing Modes: Absolute and Implied;
    - Lenght: 1 to 3 bytes;
    - Cycles: 6 to 8;
    
States shared between different addressing modes:

        ALL
        ----
            T0: MAR <- PC ;  PC++                           # Fetch  
            
Specific States:    
        
        JSR
        ---- 
            - ABS: JSR $0001 (20 01 00)         # PC <- 0001h; MEM[SP] <- PCH; SP--; MEM[SP] <- PCL; SP--;
                T1: MAR <- PC ; IR <- MEM[MAR] ; PC++;          # First Decode step, IR receives opcode    
                T2: PC++; BI <- MEM[MAR]; AI <- 0; ABL <- S; ABH <- 1; S--; # PC <- points to target's high address byte, MAR <- points to target's low address byte  
                T3: MEM[ABH/ABL] <- PCH; 
                T4: ABL <- S; ABH <- 1; S--; MEM[ABH/ABL] <- PCL;
                T5: PCL <- BI;  
                T6: PCH <- MEM[MAR]; 
                
        RTS
        ----
            - IMPLIED: RTS (60)                 # SP++; PCL <- MEM[SP]; SP++; PCH <- MEM[SP]
                T1: BI <- S; AI <- 0; IR <- MEM[MAR]
                T2: ABL <- AI + BI + 1; ABH <- 1; S <- AI + BI + 1
                T3: PCL <- MEM[ABH/ABL]; BI <- S; AI <- 0 
                T4: ABL <- AI + BI + 1; ABH <- 1; S <- AI + BI + 1
                T5: PCH <- MEM[ABH/ABL];
                
        RTI
        ----
            - IMPLIED: RTI (40)                 # SP++; P <- MEM[SP]; PCL <- MEM[SP]; SP++; PCH <- MEM[SP]
                T1: BI <- S; AI <- 0; IR <- MEM[MAR]
                T2: ABL <- AI + BI + 1; ABH <- 1; S <- AI + BI + 1
                T3: P <- MEM[ABH/ABL]; BI <- S; AI <- 0
                T4: ABL <- AI + BI + 1; ABH <- 1; S <- AI + BI + 1
                T5: PCL <- MEM[ABH/ABL]; BI <- S; AI <- 0 
                T6: ABL <- AI + BI + 1; ABH <- 1; S <- AI + BI + 1
                T7: PCH <- MEM[ABH/ABL];        
                
        BRK
        ----
            - IMPLIED: BRK (00)                 # Software Interruption
                T1: IR <- MEM[MAR]; ABL <- S; ABH <- 1; S-- 
                T2: MEM[ABH/ABL] <- PCH;                      
                T3: ABL <- S; ABH <- 1; S--; MEM[ABH/ABL] <- PCL; 
                T4: ABL <- S; ABH <- 1; S--; MEM[ABH/ABL] <- P;                       
                T5: MAR <- x"FFFF"                   # Prepares address for next state
                T6: PCH <- MEM[MAR]; MAR <- x"FFFE"; # Interruption request handler
                T7: PCL <- MEM[FFFE]; setB; setI;
                